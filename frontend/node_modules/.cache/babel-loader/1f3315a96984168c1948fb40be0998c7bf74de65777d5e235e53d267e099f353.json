{"ast":null,"code":"import React,{useState}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function SolicitudDomicilios(_ref){let{refId}=_ref;const[tipoVia,setTipoVia]=useState(\"\");const[nombreVia,setNombreVia]=useState(\"\");const[numeroVia,setNumeroVia]=useState(\"\");const[poblacion,setPoblacion]=useState(\"\");const[codPostal,setCodPostal]=useState(\"\");const[codPais,setCodPais]=useState(\"ES\");const[telefono,setTelefono]=useState(\"\");const[email,setEmail]=useState(\"\");const[predeterminado,setPredeterminado]=useState(0);const handleSubmit=async e=>{e.preventDefault();if(!refId){alert(\"❌ No se ha definido REF_ID. Primero guarda la sociedad.\");return;}const payload={REF_ID:refId,TIPO_VIA:tipoVia,NOMBRE_VIA:nombreVia,NUMERO_VIA:numeroVia,POBLACION:poblacion,COD_POSTAL:codPostal,COD_PAIS:codPais,TELEFONO:telefono,EMAIL:email,PREDETERMINADO:predeterminado};try{const response=await fetch(\"http://127.0.0.1:5000/api/domicilios\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(payload)});const data=await response.json();console.log(\"✅ Respuesta backend:\",data);if(response.ok){alert(\"✅ Domicilio creado con éxito\");// reset form\nsetTipoVia(\"\");setNombreVia(\"\");setNumeroVia(\"\");setPoblacion(\"\");setCodPostal(\"\");setTelefono(\"\");setEmail(\"\");setPredeterminado(0);}else{alert(\"❌ Error al guardar domicilio: \"+(data.error||\"desconocido\"));}}catch(error){console.error(\"❌ Error al enviar:\",error);alert(\"Error de conexión con el servidor\");}};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Nuevo Domicilio\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Tipo de V\\xEDa (CL, AV, PZ...)\",value:tipoVia,onChange:e=>setTipoVia(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Nombre de la V\\xEDa\",value:nombreVia,onChange:e=>setNombreVia(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"N\\xFAmero\",value:numeroVia,onChange:e=>setNumeroVia(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Poblaci\\xF3n\",value:poblacion,onChange:e=>setPoblacion(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"C\\xF3digo Postal\",value:codPostal,onChange:e=>setCodPostal(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"C\\xF3digo Pa\\xEDs\",value:codPais,onChange:e=>setCodPais(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Tel\\xE9fono\",value:telefono,onChange:e=>setTelefono(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email\",value:email,onChange:e=>setEmail(e.target.value)}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Predeterminado:\",/*#__PURE__*/_jsxs(\"select\",{value:predeterminado,onChange:e=>setPredeterminado(Number(e.target.value)),children:[/*#__PURE__*/_jsx(\"option\",{value:0,children:\"No\"}),/*#__PURE__*/_jsx(\"option\",{value:1,children:\"S\\xED\"})]})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"A\\xF1adir domicilio\"})]});}export default SolicitudDomicilios;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","SolicitudDomicilios","_ref","refId","tipoVia","setTipoVia","nombreVia","setNombreVia","numeroVia","setNumeroVia","poblacion","setPoblacion","codPostal","setCodPostal","codPais","setCodPais","telefono","setTelefono","email","setEmail","predeterminado","setPredeterminado","handleSubmit","e","preventDefault","alert","payload","REF_ID","TIPO_VIA","NOMBRE_VIA","NUMERO_VIA","POBLACION","COD_POSTAL","COD_PAIS","TELEFONO","EMAIL","PREDETERMINADO","response","fetch","method","headers","body","JSON","stringify","data","json","console","log","ok","error","onSubmit","children","type","placeholder","value","onChange","target","Number"],"sources":["/home/administrador/desarrollo_avalmadrid/Comercial_tool/frontend/src/components/Solicituddomicilios.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction SolicitudDomicilios({ refId }) {\n  const [tipoVia, setTipoVia] = useState(\"\");\n  const [nombreVia, setNombreVia] = useState(\"\");\n  const [numeroVia, setNumeroVia] = useState(\"\");\n  const [poblacion, setPoblacion] = useState(\"\");\n  const [codPostal, setCodPostal] = useState(\"\");\n  const [codPais, setCodPais] = useState(\"ES\");\n  const [telefono, setTelefono] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [predeterminado, setPredeterminado] = useState(0);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!refId) {\n      alert(\"❌ No se ha definido REF_ID. Primero guarda la sociedad.\");\n      return;\n    }\n\n    const payload = {\n      REF_ID: refId, \n      TIPO_VIA: tipoVia,\n      NOMBRE_VIA: nombreVia,\n      NUMERO_VIA: numeroVia,\n      POBLACION: poblacion,\n      COD_POSTAL: codPostal,\n      COD_PAIS: codPais,\n      TELEFONO: telefono,\n      EMAIL: email,\n      PREDETERMINADO: predeterminado,\n    };\n\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/api/domicilios\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(payload),\n      });\n\n      const data = await response.json();\n      console.log(\"✅ Respuesta backend:\", data);\n\n      if (response.ok) {\n        alert(\"✅ Domicilio creado con éxito\");\n        // reset form\n        setTipoVia(\"\");\n        setNombreVia(\"\");\n        setNumeroVia(\"\");\n        setPoblacion(\"\");\n        setCodPostal(\"\");\n        setTelefono(\"\");\n        setEmail(\"\");\n        setPredeterminado(0);\n      } else {\n        alert(\"❌ Error al guardar domicilio: \" + (data.error || \"desconocido\"));\n      }\n    } catch (error) {\n      console.error(\"❌ Error al enviar:\", error);\n      alert(\"Error de conexión con el servidor\");\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h3>Nuevo Domicilio</h3>\n      <input\n        type=\"text\"\n        placeholder=\"Tipo de Vía (CL, AV, PZ...)\"\n        value={tipoVia}\n        onChange={(e) => setTipoVia(e.target.value)}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Nombre de la Vía\"\n        value={nombreVia}\n        onChange={(e) => setNombreVia(e.target.value)}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Número\"\n        value={numeroVia}\n        onChange={(e) => setNumeroVia(e.target.value)}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Población\"\n        value={poblacion}\n        onChange={(e) => setPoblacion(e.target.value)}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Código Postal\"\n        value={codPostal}\n        onChange={(e) => setCodPostal(e.target.value)}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Código País\"\n        value={codPais}\n        onChange={(e) => setCodPais(e.target.value)}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Teléfono\"\n        value={telefono}\n        onChange={(e) => setTelefono(e.target.value)}\n      />\n      <input\n        type=\"email\"\n        placeholder=\"Email\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n      />\n      <label>\n        Predeterminado:\n        <select\n          value={predeterminado}\n          onChange={(e) => setPredeterminado(Number(e.target.value))}\n        >\n          <option value={0}>No</option>\n          <option value={1}>Sí</option>\n        </select>\n      </label>\n      <button type=\"submit\">Añadir domicilio</button>\n    </form>\n  );\n}\n\nexport default SolicitudDomicilios;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}